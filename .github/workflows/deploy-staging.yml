
name: Deploy Docker Image, Staging Server

on:
  push:
    branches: [previous-merge]

defaults:
  run:
    # -l: login shell, needed when using Conda
    shell: bash -l {0}

env:
  PIP_PROGRESS_BAR: "off"

jobs:

  docker_build_and_push:
    # if: github.repository == 'CATALOG-Historic-Records/orphaned-wells-ui-server'
    name: Push docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          ecr: auto
          logout: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Add creds file
        id: create-creds-json
        uses: jsdaniell/create-json@v1.2.3
        with:
            name: "app/internal/creds.json"
            json: ${{ secrets.STAGING_CREDS_JSON }}

      - name: Add service key json file
        id: create-service-key-json
        uses: jsdaniell/create-json@v1.2.3
        with:
            name: "app/internal/tidy-outlet-service-key.json"
            json: ${{ secrets.STAGING_SERVICE_KEY_JSON }}
    
      - name: Extract metadata (labels, tags, etc.) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
            images: michaelpescelbl/fastapiwithnginx
    
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
            context: .
            file: ./Dockerfile
            push: true
            tags: michaelpescelbl/fastapiwithnginx:latest
            labels: ${{ steps.meta.outputs.labels }}

  deploy_staging:
    # if: github.repository == 'CATALOG-Historic-Records/orphaned-wells-ui-server'
    name: Deploy to Staging Compute Engine
    runs-on: ubuntu-latest
    needs: [ docker_build_and_push ]
    steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: copy file via ssh key
          uses: appleboy/scp-action@v0.1.4
          with:
            host: ${{ secrets.STAGING_BACKEND_IP }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            source: "docker-compose.yml, nginx/staging/default.conf"
            target: .

        - name: run docker-compose
          uses: appleboy/ssh-action@v1.0.0
          with:
            host: ${{ secrets.STAGING_BACKEND_IP }}
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.SSH_PRIVATE_KEY }}
            script: |
                sudo docker compose down
                sudo docker rmi -f $(sudo docker images -q)
                sudo docker compose pull
                sudo docker compose up -d